Сравнение файлов sim.cpp и SIMULATION_NEW.CPP
***** sim.cpp
                task_resolved++;
                //cerr << "Task #" << unit->current_task->id << " is resolved!!! Congratulations!!!" << endl;
                unit->current_task = NULL;
***** SIMULATION_NEW.CPP
                task_resolved++;
                if(unit->current_task->id == 0) cerr << "Task #" << unit->current_task->id << " is resolved!!! Congratulations!
!!" << endl;
                unit->current_task = NULL;
*****

***** sim.cpp
                        task_resolved++;
                        //cerr << "Task #" << unit->buffer.front()->id << " is resolved!!! Congratulations!!!" << endl;
                        unit->buffer.pop();                             
***** SIMULATION_NEW.CPP
                        task_resolved++;
                        if(unit->buffer.front()->id == 0) cerr << "Task !#" << unit->buffer.front()->id << " is resolved!!! Con
gratulations!!!" << endl;
                        unit->buffer.pop();                             
*****

***** sim.cpp
                unit->buffer.push(tmp.front());
                //cerr << "Task #" << tmp.front()->id << " is transferred to unit #" << unit->id << endl;
                tmp.pop_front();
***** SIMULATION_NEW.CPP
                unit->buffer.push(tmp.front());
                if(tmp.front() ->id == 0) cerr << "Task #" << tmp.front()->id << " is transferred to unit #" << unit->id << end
l;
                tmp.pop_front();
*****

***** sim.cpp

        static_flow_graph* graph = new static_flow_graph();
***** SIMULATION_NEW.CPP

        cerr << "Summary perfomance " << sum_perf * task_processing_time_expectation << endl;
        cerr << "Summary load " << task_cnt << endl;

        static_flow_graph* graph = new static_flow_graph();
*****

***** sim.cpp
        cerr << "Found tau = " << tau << endl;

    int num = 0;
***** SIMULATION_NEW.CPP
        cerr << "Found tau = " << tau << endl;
    
    
    int num = 0;
*****

***** sim.cpp
                current_time++;
                //cerr << current_time << ": tasks resolved = " << task_resolved << endl;
        }
***** SIMULATION_NEW.CPP
                current_time++;
                cerr << current_time << ": tasks resolved = " << task_resolved << endl;
        }
*****

***** sim.cpp
ad << " " << endl;
                //cerr << "Scheduled load: " << units[i]->outgoing_channels[j]->scheduled_load << " " << graph->get_flow(n + un
its[i]->outgoing_channels[j]->id) << endl; 
        }
***** SIMULATION_NEW.CPP
ad << " " << endl;
                cerr << "Scheduled load: " << units[i]->outgoing_channels[j]->scheduled_load << " " << graph->get_flow(n + unit
s[i]->outgoing_channels[j]->id) << endl; 
        }
*****

***** sim.cpp
        cout << current_time << endl;
}                              
***** SIMULATION_NEW.CPP
        cout << current_time << endl;
        cout << "Total simulation time " << (double)(clock() - beginning) / CLOCKS_PER_SEC << "s." << endl;
}
*****

